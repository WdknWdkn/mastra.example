"use strict";(()=>{var e={};e.id=954,e.ids=[954],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},61282:e=>{e.exports=require("child_process")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},20629:e=>{e.exports=require("fs/promises")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},85807:e=>{e.exports=require("module")},98216:e=>{e.exports=require("net")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},74026:e=>{e.exports=require("string_decoder")},82452:e=>{e.exports=require("tls")},74175:e=>{e.exports=require("tty")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},6162:e=>{e.exports=require("worker_threads")},71568:e=>{e.exports=require("zlib")},36694:e=>{e.exports=import("./client/lib-esm/hrana")},42780:e=>{e.exports=import("./client/lib-esm/hrana.js")},758:e=>{e.exports=import("./client/lib-esm/http")},97205:e=>{e.exports=import("./client/lib-esm/http.js")},40987:e=>{e.exports=import("./client/lib-esm/node")},47147:e=>{e.exports=import("./client/lib-esm/node.js")},72533:e=>{e.exports=import("./client/lib-esm/sql_cache")},73628:e=>{e.exports=import("./client/lib-esm/sql_cache.js")},92702:e=>{e.exports=import("./client/lib-esm/sqlite3")},28405:e=>{e.exports=import("./client/lib-esm/sqlite3.js")},70637:e=>{e.exports=import("./client/lib-esm/web")},49747:e=>{e.exports=import("./client/lib-esm/web.js")},34984:e=>{e.exports=import("./client/lib-esm/ws")},77143:e=>{e.exports=import("./client/lib-esm/ws.js")},72254:e=>{e.exports=require("node:buffer")},15673:e=>{e.exports=require("node:events")},70612:e=>{e.exports=require("node:os")},49411:e=>{e.exports=require("node:path")},99397:e=>{e.exports=require("node:timers/promises")},32744:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>T,patchFetch:()=>v,requestAsyncStorage:()=>q,routeModule:()=>f,serverHooks:()=>j,staticGenerationAsyncStorage:()=>_});var i={};r.r(i),r.d(i,{POST:()=>y});var o=r(60889),n=r(78438),a=r(17988),s=r(95062),p=r(77659),c=r(69087),l=r(35340),m=r(7130),u=r(93609);function d(e){return({0:"快晴",1:"ほぼ晴れ",2:"部分的に曇り",3:"曇り",45:"霧",48:"霧氷",51:"軽い霧雨",53:"中程度の霧雨",55:"強い霧雨",61:"小雨",63:"中雨",65:"大雨",71:"小雪",73:"中雪",75:"大雪",95:"雷雨"})[e]||"不明"}let x=new p.Py({name:"Weather Agent",instructions:`
    あなたは地元のアクティビティと旅行の専門家で、天気に基づいた計画を立てるのが得意です。天気データを分析し、実用的なアクティビティの推奨事項を提供してください。
    予報の各日について、次のように正確に回答を構成してください：
    📅 [曜日, 月 日, 年]
    ═══════════════════════════
    🌡️ 天気概要
    • 状態: [簡単な説明]
    • 気温: [X\xb0C から A\xb0C]
    • 降水確率: [X%]
    🌅 午前のアクティビティ
    屋外:
    • [アクティビティ名] - [特定の場所/ルートを含む簡単な説明]
      最適な時間帯: [特定の時間帯]
      注意: [関連する天気の考慮事項]
    🌞 午後のアクティビティ
    屋外:
    • [アクティビティ名] - [特定の場所/ルートを含む簡単な説明]
      最適な時間帯: [特定の時間帯]
      注意: [関連する天気の考慮事項]
    🏠 室内の代替案
    • [アクティビティ名] - [特定の会場を含む簡単な説明]
      最適な条件: [このアクティビティが適している天気条件]
    ⚠️ 特別な注意事項
    • [関連する天気の警告、UV指数、風の状態など]
    ガイドライン:
    - 1日あたり2〜3つの時間指定の屋外アクティビティを提案する
    - 1〜2つの室内バックアップオプションを含める
    - 降水確率が50%を超える場合は、室内アクティビティを優先する
    - すべてのアクティビティはその場所に固有のものであること
    - 特定の会場、トレイル、または場所を含める
    - 気温に基づいてアクティビティの強度を考慮する
    - 説明は簡潔かつ有益であること
    一貫性のために、絵文字とセクションヘッダーを示すとおりに、この正確な書式を維持してください。
  `,model:(0,s.f)("gpt-4o-mini")}),h=new c.h8({id:"fetch-weather",description:"指定された都市の天気予報を取得します",inputSchema:m.z.object({city:m.z.string().describe("天気を取得する都市")}),execute:async({context:e})=>{let t=e?.getStepResult("trigger");if(!t)throw Error("トリガーデータが見つかりません");let r=`https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(t.city)}&count=1`,i=await fetch(r),o=await i.json();if(!o.results?.[0])throw Error(`場所 '${t.city}' が見つかりません`);let{latitude:n,longitude:a,name:s}=o.results[0],p=`https://api.open-meteo.com/v1/forecast?latitude=${n}&longitude=${a}&daily=temperature_2m_max,temperature_2m_min,precipitation_probability_mean,weathercode&timezone=auto`,c=await fetch(p),l=await c.json();return l.daily.time.map((e,t)=>({date:e,maxTemp:l.daily.temperature_2m_max[t],minTemp:l.daily.temperature_2m_min[t],precipitationChance:l.daily.precipitation_probability_mean[t],condition:d(l.daily.weathercode[t]),location:s}))}}),w=m.z.array(m.z.object({date:m.z.string(),maxTemp:m.z.number(),minTemp:m.z.number(),precipitationChance:m.z.number(),condition:m.z.string(),location:m.z.string()})),g=new c.h8({id:"plan-activities",description:"天気条件に基づいてアクティビティを提案します",inputSchema:w,execute:async({context:e})=>{let t=e?.getStepResult("fetch-weather");if(!t)throw Error("予報データが見つかりません");let r=`以下の${t[0].location}の天気予報に基づいて、適切なアクティビティを提案してください：
      ${JSON.stringify(t,null,2)}
    `;return{activities:(await x.generate(r)).text,forecast:t}}}),b=new p.h4({name:"weather-workflow",triggerSchema:m.z.object({city:m.z.string().describe("天気を取得する都市")})}).step(h).then(g);async function y(e){try{let{city:t}=await e.json();if(!t)return u.NextResponse.json({error:"都市名が必要です"},{status:400});try{let e=`https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(t)}&count=1`,r=async(e,t={},r=1e4)=>{let i=new AbortController,o=setTimeout(()=>i.abort(),r);try{let r=await fetch(e,{...t,signal:i.signal});return clearTimeout(o),r}catch(e){throw clearTimeout(o),e}};console.log("位置情報APIにリクエスト送信中...");let i=await r(e);console.log("位置情報APIからレスポンス受信");let o=await i.json();if(!o.results?.[0])return u.NextResponse.json({error:`場所 '${t}' が見つかりません`},{status:404});let{latitude:n,longitude:a,name:s}=o.results[0],p=`https://api.open-meteo.com/v1/forecast?latitude=${n}&longitude=${a}&daily=temperature_2m_max,temperature_2m_min,precipitation_probability_mean,weathercode&timezone=auto`;console.log("天気予報APIにリクエスト送信中...");let c=await r(p,{},15e3);console.log("天気予報APIからレスポンス受信");let l=await c.json(),m=l.daily.time.map((e,t)=>({date:e,maxTemp:l.daily.temperature_2m_max[t],minTemp:l.daily.temperature_2m_min[t],precipitationChance:l.daily.precipitation_probability_mean[t],condition:d(l.daily.weathercode[t]),location:s})),h=`以下の${s}の天気予報に基づいて、適切なアクティビティを提案してください：
        ${JSON.stringify(m,null,2)}
      `,w=await x.generate(h);return u.NextResponse.json({activities:w.text,forecast:m})}catch(e){if(console.error("天気データの取得中にエラーが発生しました:",e),"AbortError"===e.name||e.cause?.code==="ETIMEDOUT"){console.log("APIタイムアウト - モックデータを使用します");let e=[{date:new Date().toISOString().split("T")[0],maxTemp:22,minTemp:15,precipitationChance:10,condition:"晴れ",location:t||"東京"},{date:new Date(Date.now()+864e5).toISOString().split("T")[0],maxTemp:23,minTemp:16,precipitationChance:20,condition:"晴れ時々曇り",location:t||"東京"},{date:new Date(Date.now()+1728e5).toISOString().split("T")[0],maxTemp:21,minTemp:14,precipitationChance:30,condition:"曇り",location:t||"東京"}];try{let r=`以下の${t||"東京"}の天気予報に基づいて、適切なアクティビティを提案してください：
            ${JSON.stringify(e,null,2)}
          `,i=await x.generate(r);return u.NextResponse.json({activities:i.text,forecast:e,isMockData:!0})}catch(e){return console.error("エージェントの実行中にエラーが発生しました:",e),u.NextResponse.json({error:"ネットワークエラーが発生し、代替データの生成にも失敗しました。インターネット接続を確認してください。",details:e.message},{status:500})}}return u.NextResponse.json({error:"天気データの取得中にエラーが発生しました",details:e.message,code:e.cause?.code},{status:500})}}catch(e){return console.error("リクエストの処理中にエラーが発生しました:",e),u.NextResponse.json({error:"リクエストの処理中にエラーが発生しました"},{status:500})}}b.commit(),new l.d({workflows:{weatherWorkflow:b}});let f=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/weather/route",pathname:"/api/weather",filename:"route",bundlePath:"app/api/weather/route"},resolvedPagePath:"/home/ubuntu/repos/mastra.example/frontend-ui/app/api/weather/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:q,staticGenerationAsyncStorage:_,serverHooks:j}=f,T="/api/weather/route";function v(){return(0,a.patchFetch)({serverHooks:j,staticGenerationAsyncStorage:_})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[651,234,396,62,622],()=>r(32744));module.exports=i})();